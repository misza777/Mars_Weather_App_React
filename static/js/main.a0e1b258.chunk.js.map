{"version":3,"sources":["img/nasa-mars-bg.jpg","helpers.js","api.js","components/WeatherData.styles.js","components/WeatherData.js","components/Info.styles.js","components/Info.js","components/Unit.styles.js","components/Unit.js","components/Previous.styles.js","components/Previous.js","App.styles.js","App.js","index.js"],"names":["module","exports","formatTemperature","temperature","isMetric","returnTemp","Math","round","API_URL","Wrapper","styled","div","Date","Temp","Wind","props","deg","WeatherData","sol","date","season","className","maxTemp","minTemp","windDirectionDegrees","speed","returnSpeed","displaySpeed","windSpeed","windDirectionPoint","InfoStyles","Info","href","UnitStyles","Toggle","button","metric","Unit","setMetric","htmlFor","onClick","prev","PreviousWrapper","previous","PreviousDays","PreviousDay","Previous","weather","setPrevious","setSelectedSol","map","i","key","GlobalStyle","createGlobalStyle","bgImage","AppWrapper","MarsWeather","main","InfoWrapper","App","useState","loading","setLoading","setWeather","selectedSol","console","log","useEffect","a","fetch","json","marsWeather","sol_keys","solKey","AT","mx","mn","HWS","av","Season","WD","most_common","compass_degrees","compass_point","First_UTC","toLocaleDateString","undefined","day","month","year","length","fetchFromApi","BGImage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0e1b258.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nasa-mars-bg.249d1f5c.jpg\";","export const formatDate = (date) =>\n  date.toLocaleDateString(undefined, {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n  });\n\nexport const formatTemperature = (temperature, isMetric) => {\n  let returnTemp = temperature;\n  if (!isMetric) {\n    returnTemp = (temperature - 32) * (5 / 9);\n  }\n  return Math.round(returnTemp);\n};\n\nexport const displaySpeed = (speed, isMetric) => {\n  let returnSpeed = speed;\n  if (!isMetric) {\n    returnSpeed = speed / 1.609;\n  }\n  return Math.round(returnSpeed);\n};\n","const API_KEY = \"FqvvYsou3HmZcttWCDCehCvqkKOLKnaO1TUyaqcS\";\nexport const API_URL = `https://api.nasa.gov/insight_weather/?api_key=${API_KEY}&feedtype=json&ver=1.0`;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  grid-gap: 2em;\n  padding: 40px 0;\n`;\n\nexport const Date = styled.div`\n  h2 {\n    font-size: var(--fs-xl);\n    margin: 0;\n  }\n\n  p {\n    font-size: var(--fs-h2);\n    margin: 0;\n    color: var(--clr-gray);\n    font-weight: var(--fw-light);\n  }\n`;\n\nexport const Temp = styled.div`\n  --border: solid 0.25em var(--clr-accent-dark);\n  border-left: var(--border);\n  border-right: var(--border);\n  padding: 0 2em;\n`;\n\nexport const Wind = styled.div`\n  display: grid;\n\n  .section-title,\n  .reading {\n    grid-column: 2 / 3;\n  }\n\n  .wind__direction {\n    --size: 6rem;\n    width: var(--size);\n    height: var(--size);\n    border-radius: 50%;\n    background-color: rgba(255, 255, 255, 0.5);\n    display: -ms-grid;\n    display: grid;\n    place-items: center;\n    grid-row: 1 / span 2;\n    grid-column: 1/2;\n    justify-self: center;\n  }\n\n  .wind__arrow {\n    grid-row: 1 / span 2;\n    --direction: ${(props) => props.deg + \"deg\"};\n    --size: 0.8rem;\n    height: calc(var(--size) * 3);\n    width: var(--size);\n    background: var(--clr-accent-dark);\n    clip-path: polygon(50% 0, 0% 100%, 100% 100%);\n    transform: translateY(-50%) rotate(var(--direction));\n    transform-origin: bottom center;\n    transition: -webkit-transform 500ms ease;\n    transition: transform 500ms ease;\n    transition: transform 500ms ease, -webkit-transform 500ms ease;\n  }\n\n  .wind__point {\n    grid-column: 1/2;\n    grid-row: 2/3;\n    font-size: var(--fs-h1);\n    color: var(--clr-gray);\n    justify-self: center;\n  }\n`;\n","import React from \"react\";\n// Helpers\nimport { formatTemperature, displaySpeed } from \"../helpers\";\n// Styles\nimport { Wrapper, Date, Temp, Wind } from \"./WeatherData.styles\";\n\nconst WeatherData = ({ sol, isMetric }) => (\n  <Wrapper>\n    <Date>\n      <h2>Sol {sol.sol}</h2>\n      <p>{sol.date}</p>\n      <p>{sol.season}</p>\n    </Date>\n\n    <Temp>\n      <h2 className=\"section-title\">Temp</h2>\n      <p className=\"reading\">\n        High:\n        <span>{formatTemperature(sol.maxTemp, isMetric)}</span> °\n        <span>{isMetric ? \"C\" : \"F\"}</span>\n      </p>\n      <p className=\"reading\">\n        Low:\n        <span>{formatTemperature(sol.minTemp, isMetric)}</span> °\n        <span>{isMetric ? \"C\" : \"F\"}</span>\n      </p>\n    </Temp>\n\n    <Wind deg={sol.windDirectionDegrees}>\n      <h2 className=\"section-title\">Wind</h2>\n      <p className=\"reading\">\n        <span>{displaySpeed(sol.windSpeed, isMetric)}</span>\n        <span>{isMetric ? \" kph\" : \" mph\"}</span>\n      </p>\n\n      <div className=\"wind__direction\">\n        <div className=\"wind__arrow\"></div>\n      </div>\n      <span className=\"wind__point\">{sol.windDirectionPoint}</span>\n    </Wind>\n  </Wrapper>\n);\n\nexport default WeatherData;\n","import styled from 'styled-components';\n\nexport const InfoStyles = styled.div`\n  grid-column: 1 / 3;\n`;\n","import React from 'react';\n// Styles\nimport { InfoStyles } from './Info.styles';\n\nconst Info = () => (\n  <InfoStyles>\n    <p>\n      InSight is taking daily weather measurements (temperature, wind, pressure)\n      on the surface of Mars at Elysium Planitia, a flat, smooth plain near\n      Mars’ equator.\n    </p>\n    <p>\n      This is only a part of InSight’s mission.{' '}\n      <a href='https://mars.nasa.gov/insight/mission/overview/'>Click here</a>\n      to find out more.\n    </p>\n  </InfoStyles>\n);\n\nexport default Info;\n","import styled from \"styled-components\";\n\nexport const UnitStyles = styled.div`\n  place-self: end;\n  color: var(--clr-light);\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  opacity: 0.7;\n  transition: opacity 275ms linear;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Toggle = styled.button`\n  cursor: pointer;\n  width: 4em;\n  border: 2px solid var(--clr-light);\n  background: transparent;\n  padding: 0;\n  border-radius: 100vmax;\n  margin: 0 1em;\n\n  ::after {\n    content: \"\";\n    display: block;\n    background: var(--clr-light);\n    border-radius: 50%;\n    height: 1rem;\n    margin: 3px;\n    margin-left: ${(props) => (props.metric ? \"3px\" : \"auto\")};\n    width: 1rem;\n  }\n`;\n","import React from \"react\";\n// Styles\nimport { UnitStyles, Toggle } from \"./Unit.styles\";\n\nconst Unit = ({ metric, setMetric }) => (\n  <UnitStyles>\n    <label htmlFor=\"cel\">°C</label>\n    <Toggle metric={metric} onClick={() => setMetric((prev) => !prev)} />\n    <label htmlFor=\"fah\">°F</label>\n  </UnitStyles>\n);\nexport default Unit;\n","import styled from \"styled-components\";\n\nexport const PreviousWrapper = styled.div`\n  background: var(--clr-light);\n  color: var(--clr-dark);\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  transform: ${({ previous }) =>\n    previous ? \"translateY(8%)\" : \"translateY(60%)\"};\n  transition: -webkit-transform 750ms ease;\n  transition: transform 750ms ease;\n  transition: transform 750ms ease, -webkit-transform 350ms ease;\n  padding: 3rem;\n\n  .previous-weather__title {\n    text-align: ${({ previous }) => (previous ? \"left\" : \"center\")};\n    ${({ previous }) =>\n      previous\n        ? \"animation: slideUpIn 1250ms forwards;\"\n        : \"text-align: center\"};\n  }\n  \n  @keyframes slideUpIn {\n    0% {\n      opacity: 0;\n      transform: translateY(50%);\n    }\n    100% {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  } \n\n  @-webkit-keyframes slideUpIn {\n    0% {\n      opacity: 0;\n      transform: translateY(50%);\n    }\n    100% {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  }\n`;\n\nexport const Toggle = styled.button`\n  position: absolute;\n  background: var(--clr-light);\n  left: 50%;\n  top: 50px;\n  width: 10rem;\n  transform: translate(-50%, calc(-100% - 3rem));\n  text-align: center;\n  font-size: var(--fs-h2);\n  line-height: 1;\n  clip-path: polygon(50% 0, 0 100%, 100% 100%);\n  cursor: pointer;\n  color: var(--clr-gray);\n  border: 0;\n  font-family: inherit;\n\n  :hover,\n  :focus {\n    color: var(--clr-dark);\n  }\n\n  span {\n    display: block;\n    transform: ${({ previous }) =>\n      previous ? \"rotate(180deg) translateY(-6px)\" : \"rotate(0)\"};\n\n    transition: -webkit-transform 300ms ease;\n    transition: transform 300ms ease;\n    transition: transform 300ms ease, -webkit-transform 300ms ease;\n  }\n`;\n\nexport const PreviousDays = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  justify-content: space-between;\n  height: 200px;\n  overflow: auto;\n`;\n\nexport const PreviousDay = styled.div`\n  opacity: 0;\n  ${({ previous }) => previous && \"animation: slideUpIn 1250ms forwards;\"};\n  margin: 10px 0;\n\n  > * {\n    margin: 0;\n  }\n\n  .previous-day__date {\n    font-size: 0.9rem;\n    color: var(--clr-gray);\n  }\n\n  .previous-day__more-info {\n    cursor: pointer;\n    border: 0;\n    border-radius: 100vmax;\n    background: var(--clr-dark);\n    color: var(--clr-light);\n    text-transform: uppercase;\n    padding: 0.3em 1em;\n    margin-top: 1em;\n  }\n\n  .previous-day__more-info:hover {\n    background: var(--clr-gray);\n  }\n\n  :nth-child(1) {\n    animation-delay: 100ms;\n  }\n\n  :nth-child(2) {\n    animation-delay: 125ms;\n  }\n\n  :nth-child(3) {\n    animation-delay: 150ms;\n  }\n\n  :nth-child(4) {\n    animation-delay: 175ms;\n  }\n\n  :nth-child(5) {\n    animation-delay: 200ms;\n  }\n\n  :nth-child(6) {\n    animation-delay: 225ms;\n  }\n\n  :nth-child(7) {\n    animation-delay: 250ms;\n  }\n\n  .show-weather.previous-weather .previous-day:nth-child(7) {\n    animation-delay: 300ms;\n  }\n`;\n","import React from \"react\";\n// Styles\nimport {\n  PreviousWrapper,\n  Toggle,\n  PreviousDays,\n  PreviousDay,\n} from \"./Previous.styles\";\nimport {formatTemperature} from \"../helpers\";\n\nconst Previous = ({\n  isMetric,\n  weather,\n  previous,\n  setPrevious,\n  setSelectedSol,\n}) => (\n  <PreviousWrapper previous={previous}>\n    <Toggle\n      htmlFor=\"weather-toggle\"\n      onClick={() => setPrevious((prev) => !prev)}\n      previous={previous}\n    >\n      <span>&#8593;</span>\n      <span className=\"sr-only\">Show previous weather</span>\n    </Toggle>\n\n    <h2 className=\"main-title previous-weather__title\">Previous 7 days</h2>\n    <PreviousDays weather={weather}>\n      {weather.map((sol, i) => (\n        <PreviousDay key={sol.sol} previous={previous}>\n          <h3 className=\".previous-day__sol\">Sol {sol.sol}</h3>\n          <p className=\"previous-day__date\">{sol.date}</p>\n          <p className=\"previous-day__date\">{sol.season}</p>\n          <p className=\"previous-day__temp\">\n            High: <span>{formatTemperature(sol.maxTemp, isMetric)}</span> °\n            <span>{isMetric ? \"C\" : \"F\"}</span>\n          </p>\n          <p className=\"previous-day__temp\">\n            Low: High: <span>{formatTemperature(sol.minTemp, isMetric)}</span> °\n            <span>{isMetric ? \"C\" : \"F\"}</span>\n          </p>\n          <button\n            className=\"previous-day__more-info\"\n            onClick={() => setSelectedSol(i)}\n          >\n            More info\n          </button>\n        </PreviousDay>\n      ))}\n    </PreviousDays>\n  </PreviousWrapper>\n);\n\nexport default Previous;\n","import styled, { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  :root {\n    --fw-light: 300;\n    --fw-normal: 400;\n    --fw-semi: 500;\n    --fw-bold: 700;\n    --fs-h1: 1.5rem;\n    --fs-h2: 2.25rem;\n    --fs-body: 1rem;\n    --fs-xl: 4.5rem;\n    --clr-light: #fff;\n    --clr-gray: #989898;\n    --clr-dark: #444;\n    --clr-accent: #D06D6D;\n    --clr-accent-dark: #613131;\n  }\n\n  .sr-only:not(:focus):not(:active) {\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  }\n\n  body {\n    margin: 0;\n    font-family: 'Montserrat', sans-serif;\n    line-height: 1.6;\n    background-image: url(${(props) => props.bgImage});\n    background-size: cover;\n    height: 100vh;\n\n    color: var(--clr-light);\n  }\n\n  h1, h2, h3 {\n    line-height: 1;\n  }\n\n  a {\n    color: var(--clr-accent);\n  }\n\n  a:hover {\n    color: var(--clr-accent-dark);\n  }  \n\n  .main-title {\n    font-size: var(--fs-h1);\n    font-weight: var(--fw-light);\n    text-transform: uppercase;\n    color: var(--clr-accent);\n    letter-spacing: 2px;\n    grid-column: 1 / -1;\n  }\n`;\n\nexport const AppWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n`;\n\nexport const MarsWeather = styled.main`\n  background: rgba(0, 0, 0, 0.7);\n  padding: 2em;\n  max-width: 1000px;\n  margin: 40px 0;\n  border-radius: 20px;\n\n  .section-title {\n    font-size: var(--fs-h2);\n    font-weight: var(--fw-bold);\n    margin: 0;\n  }\n\n  .reading {\n    font-size: var(--fs-h1);\n    margin: 0;\n    color: var(--clr-gray);\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n`;\n","import React, { useState, useEffect } from \"react\";\n//helpers\nimport { formatDate } from \"./helpers\";\n//API\nimport { API_URL } from \"./api\";\n//components\nimport WeatherData from \"./components/WeatherData\";\nimport Info from \"./components/Info\";\nimport Unit from \"./components/Unit\";\nimport Previous from \"./components/Previous\";\n//Img\nimport BGImage from \"./img/nasa-mars-bg.jpg\";\n//Styles\nimport {\n  AppWrapper,\n  GlobalStyle,\n  MarsWeather,\n  InfoWrapper,\n} from \"./App.styles\";\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const [weather, setWeather] = useState([]);\n  const [selectedSol, setSelectedSol] = useState();\n  const [metric, setMetric] = useState(true);\n  const [previous, setPrevious] = useState(false);\n\n  console.log(weather);\n\n  useEffect(() => {\n    const fetchFromApi = async () => {\n      const weather = await (await fetch(API_URL)).json();\n      console.log(weather);\n      const marsWeather = weather.sol_keys.map((solKey) => {\n        return {\n          // key: solKey,\n          sol: solKey,\n          //nowy zapis ES2020 jesli nie ma danych to wyrzuc\n          maxTemp: weather[solKey].AT?.mx || \"No data!\",\n          minTemp: weather[solKey].AT?.mn || \"No data!\",\n          windSpeed: Math.round(weather[solKey].HWS?.av || 0),\n          season: weather[solKey].Season || \"No data!\",\n          windDirectionDegrees:\n            weather[solKey].WD?.most_common?.compass_degrees || 0,\n          windDirectionPoint:\n            weather[solKey].WD?.most_common?.compass_point || \"No data!\",\n          date: formatDate(new Date(weather[solKey].First_UTC)),\n        };\n      });\n      setWeather(marsWeather);\n      setSelectedSol(marsWeather.length - 1);\n      setLoading(false);\n    };\n\n    fetchFromApi();\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle bgImage={BGImage} />\n      <AppWrapper>\n        <MarsWeather>\n          {loading ? (\n            <div>Loading ... </div>\n          ) : (\n            <>\n              <h1 className=\"main-title\">\n                Latest Weather at Elysium Plantitia\n              </h1>\n              <WeatherData sol={weather[selectedSol]} isMetric={metric} />\n              <InfoWrapper>\n                <Info />\n                <Unit metric={metric} setMetric={setMetric} />\n              </InfoWrapper>\n            </>\n          )}\n        </MarsWeather>\n        <Previous\n          weather={weather}\n          previous={previous}\n          setPrevious={setPrevious}\n          setSelectedSol={setSelectedSol}\n          isMetric={metric}\n        />\n      </AppWrapper>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}