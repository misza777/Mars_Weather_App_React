{"version":3,"sources":["img/mars-dan-gerhards-01.svg","img/nasa-mars-bg.jpg","helpers.js","api.js","components/WeatherData.styles.js","components/WeatherData.js","components/Info.styles.js","components/Info.js","components/Unit.styles.js","components/Unit.js","components/Previous.styles.js","components/Previous.js","components/Error.styles.js","components/Error.js","App.styles.js","App.js","index.js"],"names":["module","exports","formatTemperature","temperature","isMetric","returnTemp","Math","round","API_URL","Wrapper","styled","div","Date","Temp","Wind","props","deg","WeatherData","sol","date","season","className","maxTemp","minTemp","windDirectionDegrees","speed","returnSpeed","displaySpeed","windSpeed","windDirectionPoint","InfoStyles","Info","href","UnitStyles","Toggle","button","metric","Unit","setMetric","htmlFor","onClick","prev","PreviousWrapper","previous","PreviousDays","PreviousDay","Previous","weather","setPrevious","setSelectedSol","map","i","key","ErrorStyles","Error","src","MarsImage","alt","style","width","target","rel","GlobalStyle","createGlobalStyle","bgImage","AppWrapper","MarsWeather","main","InfoWrapper","App","useState","loading","setLoading","setWeather","selectedSol","error","setError","useEffect","a","fetch","json","console","log","sol_keys","length","marsWeather","solKey","AT","mx","mn","HWS","av","Season","WD","most_common","compass_degrees","compass_point","First_UTC","toLocaleDateString","undefined","day","month","year","fetchFromApi","BGImage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4e5e19e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mars-dan-gerhards-01.cfd65514.svg\";","module.exports = __webpack_public_path__ + \"static/media/nasa-mars-bg.249d1f5c.jpg\";","export const formatDate = (date) =>\r\n  date.toLocaleDateString(undefined, {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n  });\r\n\r\nexport const formatTemperature = (temperature, isMetric) => {\r\n  let returnTemp = temperature;\r\n  if (!isMetric) {\r\n    returnTemp = (temperature - 32) * (5 / 9);\r\n  }\r\n  return Math.round(returnTemp);\r\n};\r\n\r\nexport const displaySpeed = (speed, isMetric) => {\r\n  let returnSpeed = speed;\r\n  if (!isMetric) {\r\n    returnSpeed = speed / 1.609;\r\n  }\r\n  return Math.round(returnSpeed);\r\n};\r\n","const API_KEY = \"LonoXWQJ1drhfOfR054f1E5jmbY0rpqkQlQeRGtX\";\r\nexport const API_URL = `https://api.nasa.gov/insight_weather/?api_key=${API_KEY}&feedtype=json&ver=1.0`;\r\n        ","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n  grid-gap: 2em;\r\n  padding: 40px 0;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  h2 {\r\n    font-size: var(--fs-xl);\r\n    margin: 0;\r\n  }\r\n\r\n  p {\r\n    font-size: var(--fs-h2);\r\n    margin: 0;\r\n    color: var(--clr-gray);\r\n    font-weight: var(--fw-light);\r\n  }\r\n`;\r\n\r\nexport const Temp = styled.div`\r\n  --border: solid 0.25em var(--clr-accent-dark);\r\n  border-left: var(--border);\r\n  border-right: var(--border);\r\n  padding: 0 2em;\r\n`;\r\n\r\nexport const Wind = styled.div`\r\n  display: grid;\r\n\r\n  .section-title,\r\n  .reading {\r\n    grid-column: 2 / 3;\r\n  }\r\n\r\n  .wind__direction {\r\n    --size: 6rem;\r\n    width: var(--size);\r\n    height: var(--size);\r\n    border-radius: 50%;\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n    display: -ms-grid;\r\n    display: grid;\r\n    place-items: center;\r\n    grid-row: 1 / span 2;\r\n    grid-column: 1/2;\r\n    justify-self: center;\r\n  }\r\n\r\n  .wind__arrow {\r\n    grid-row: 1 / span 2;\r\n    --direction: ${(props) => props.deg + \"deg\"};\r\n    --size: 0.8rem;\r\n    height: calc(var(--size) * 3);\r\n    width: var(--size);\r\n    background: var(--clr-accent-dark);\r\n    clip-path: polygon(50% 0, 0% 100%, 100% 100%);\r\n    transform: translateY(-50%) rotate(var(--direction));\r\n    transform-origin: bottom center;\r\n    transition: -webkit-transform 500ms ease;\r\n    transition: transform 500ms ease;\r\n    transition: transform 500ms ease, -webkit-transform 500ms ease;\r\n  }\r\n\r\n  .wind__point {\r\n    grid-column: 1/2;\r\n    grid-row: 2/3;\r\n    font-size: var(--fs-h1);\r\n    color: var(--clr-gray);\r\n    justify-self: center;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n// Helpers\r\nimport { formatTemperature, displaySpeed } from \"../helpers\";\r\n// Styles\r\nimport { Wrapper, Date, Temp, Wind } from \"./WeatherData.styles\";\r\n\r\nconst WeatherData = ({ sol, isMetric }) => (\r\n  <Wrapper>\r\n    <Date>\r\n      <h2>Sol {sol.sol}</h2>\r\n      <p>{sol.date}</p>\r\n      <p>{sol.season}</p>\r\n    </Date>\r\n\r\n    <Temp>\r\n      <h2 className=\"section-title\">Temp</h2>\r\n      <p className=\"reading\">\r\n        High:\r\n        <span>{formatTemperature(sol.maxTemp, isMetric)}</span> °\r\n        <span>{isMetric ? \"C\" : \"F\"}</span>\r\n      </p>\r\n      <p className=\"reading\">\r\n        Low:\r\n        <span>{formatTemperature(sol.minTemp, isMetric)}</span> °\r\n        <span>{isMetric ? \"C\" : \"F\"}</span>\r\n      </p>\r\n    </Temp>\r\n\r\n    <Wind deg={sol.windDirectionDegrees}>\r\n      <h2 className=\"section-title\">Wind</h2>\r\n      <p className=\"reading\">\r\n        <span>{displaySpeed(sol.windSpeed, isMetric)}</span>\r\n        <span>{isMetric ? \" kph\" : \" mph\"}</span>\r\n      </p>\r\n\r\n      <div className=\"wind__direction\">\r\n        <div className=\"wind__arrow\"></div>\r\n      </div>\r\n      <span className=\"wind__point\">{sol.windDirectionPoint}</span>\r\n    </Wind>\r\n  </Wrapper>\r\n);\r\n\r\nexport default WeatherData;\r\n","import styled from 'styled-components';\r\n\r\nexport const InfoStyles = styled.div`\r\n  grid-column: 1 / 3;\r\n`;\r\n","import React from 'react';\r\n// Styles\r\nimport { InfoStyles } from './Info.styles';\r\n\r\nconst Info = () => (\r\n  <InfoStyles>\r\n    <p>\r\n      InSight is taking daily weather measurements (temperature, wind, pressure)\r\n      on the surface of Mars at Elysium Planitia, a flat, smooth plain near\r\n      Mars’ equator.\r\n    </p>\r\n    <p>\r\n      This is only a part of InSight’s mission.{' '}\r\n      <a href='https://mars.nasa.gov/insight/mission/overview/'>Click here</a>\r\n      to find out more.\r\n    </p>\r\n  </InfoStyles>\r\n);\r\n\r\nexport default Info;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UnitStyles = styled.div`\r\n  place-self: end;\r\n  color: var(--clr-light);\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  opacity: 0.7;\r\n  transition: opacity 275ms linear;\r\n\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const Toggle = styled.button`\r\n  cursor: pointer;\r\n  width: 4em;\r\n  border: 2px solid var(--clr-light);\r\n  background: transparent;\r\n  padding: 0;\r\n  border-radius: 100vmax;\r\n  margin: 0 1em;\r\n\r\n  ::after {\r\n    content: \"\";\r\n    display: block;\r\n    background: var(--clr-light);\r\n    border-radius: 50%;\r\n    height: 1rem;\r\n    margin: 3px;\r\n    margin-left: ${(props) => (props.metric ? \"3px\" : \"auto\")};\r\n    width: 1rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n// Styles\r\nimport { UnitStyles, Toggle } from \"./Unit.styles\";\r\n\r\nconst Unit = ({ metric, setMetric }) => (\r\n  <UnitStyles>\r\n    <label htmlFor=\"cel\">°C</label>\r\n    <Toggle metric={metric} onClick={() => setMetric((prev) => !prev)} />\r\n    <label htmlFor=\"fah\">°F</label>\r\n  </UnitStyles>\r\n);\r\nexport default Unit;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PreviousWrapper = styled.div`\r\n  background: var(--clr-light);\r\n  color: var(--clr-dark);\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  transform: ${({ previous }) =>\r\n    previous ? \"translateY(8%)\" : \"translateY(60%)\"};\r\n  transition: -webkit-transform 750ms ease;\r\n  transition: transform 750ms ease;\r\n  transition: transform 750ms ease, -webkit-transform 350ms ease;\r\n  padding: 3rem;\r\n\r\n  .previous-weather__title {\r\n    text-align: ${({ previous }) => (previous ? \"left\" : \"center\")};\r\n    ${({ previous }) =>\r\n      previous\r\n        ? \"animation: slideUpIn 1250ms forwards;\"\r\n        : \"text-align: center\"};\r\n  }\r\n  \r\n  @keyframes slideUpIn {\r\n    0% {\r\n      opacity: 0;\r\n      transform: translateY(50%);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  } \r\n\r\n  @-webkit-keyframes slideUpIn {\r\n    0% {\r\n      opacity: 0;\r\n      transform: translateY(50%);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n  }\r\n`;\r\n\r\nexport const Toggle = styled.button`\r\n  position: absolute;\r\n  background: var(--clr-light);\r\n  left: 50%;\r\n  top: 50px;\r\n  width: 10rem;\r\n  transform: translate(-50%, calc(-100% - 3rem));\r\n  text-align: center;\r\n  font-size: var(--fs-h2);\r\n  line-height: 1;\r\n  clip-path: polygon(50% 0, 0 100%, 100% 100%);\r\n  cursor: pointer;\r\n  color: var(--clr-gray);\r\n  border: 0;\r\n  font-family: inherit;\r\n\r\n  :hover,\r\n  :focus {\r\n    color: var(--clr-dark);\r\n  }\r\n\r\n  span {\r\n    display: block;\r\n    transform: ${({ previous }) =>\r\n      previous ? \"rotate(180deg) translateY(-6px)\" : \"rotate(0)\"};\r\n\r\n    transition: -webkit-transform 300ms ease;\r\n    transition: transform 300ms ease;\r\n    transition: transform 300ms ease, -webkit-transform 300ms ease;\r\n  }\r\n`;\r\n\r\nexport const PreviousDays = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n  justify-content: space-between;\r\n  height: 200px;\r\n  overflow: auto;\r\n`;\r\n\r\nexport const PreviousDay = styled.div`\r\n  opacity: 0;\r\n  ${({ previous }) => previous && \"animation: slideUpIn 1250ms forwards;\"};\r\n  margin: 10px 0;\r\n\r\n  > * {\r\n    margin: 0;\r\n  }\r\n\r\n  .previous-day__date {\r\n    font-size: 0.9rem;\r\n    color: var(--clr-gray);\r\n  }\r\n\r\n  .previous-day__more-info {\r\n    cursor: pointer;\r\n    border: 0;\r\n    border-radius: 100vmax;\r\n    background: var(--clr-dark);\r\n    color: var(--clr-light);\r\n    text-transform: uppercase;\r\n    padding: 0.3em 1em;\r\n    margin-top: 1em;\r\n  }\r\n\r\n  .previous-day__more-info:hover {\r\n    background: var(--clr-gray);\r\n  }\r\n\r\n  :nth-child(1) {\r\n    animation-delay: 100ms;\r\n  }\r\n\r\n  :nth-child(2) {\r\n    animation-delay: 125ms;\r\n  }\r\n\r\n  :nth-child(3) {\r\n    animation-delay: 150ms;\r\n  }\r\n\r\n  :nth-child(4) {\r\n    animation-delay: 175ms;\r\n  }\r\n\r\n  :nth-child(5) {\r\n    animation-delay: 200ms;\r\n  }\r\n\r\n  :nth-child(6) {\r\n    animation-delay: 225ms;\r\n  }\r\n\r\n  :nth-child(7) {\r\n    animation-delay: 250ms;\r\n  }\r\n\r\n  .show-weather.previous-weather .previous-day:nth-child(7) {\r\n    animation-delay: 300ms;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n// Styles\r\nimport {\r\n  PreviousWrapper,\r\n  Toggle,\r\n  PreviousDays,\r\n  PreviousDay,\r\n} from \"./Previous.styles\";\r\nimport {formatTemperature} from \"../helpers\";\r\n\r\nconst Previous = ({\r\n  isMetric,\r\n  weather,\r\n  previous,\r\n  setPrevious,\r\n  setSelectedSol,\r\n}) => (\r\n  <PreviousWrapper previous={previous}>\r\n    <Toggle\r\n      htmlFor=\"weather-toggle\"\r\n      onClick={() => setPrevious((prev) => !prev)}\r\n      previous={previous}\r\n    >\r\n      <span>&#8593;</span>\r\n      <span className=\"sr-only\">Show previous weather</span>\r\n    </Toggle>\r\n\r\n    <h2 className=\"main-title previous-weather__title\">Previous 7 days</h2>\r\n    <PreviousDays weather={weather}>\r\n      {weather.map((sol, i) => (\r\n        <PreviousDay key={sol.sol} previous={previous}>\r\n          <h3 className=\".previous-day__sol\">Sol {sol.sol}</h3>\r\n          <p className=\"previous-day__date\">{sol.date}</p>\r\n          <p className=\"previous-day__date\">{sol.season}</p>\r\n          <p className=\"previous-day__temp\">\r\n            High: <span>{formatTemperature(sol.maxTemp, isMetric)}</span> °\r\n            <span>{isMetric ? \"C\" : \"F\"}</span>\r\n          </p>\r\n          <p className=\"previous-day__temp\">\r\n            Low: High: <span>{formatTemperature(sol.minTemp, isMetric)}</span> °\r\n            <span>{isMetric ? \"C\" : \"F\"}</span>\r\n          </p>\r\n          <button\r\n            className=\"previous-day__more-info\"\r\n            onClick={() => setSelectedSol(i)}\r\n          >\r\n            More info\r\n          </button>\r\n        </PreviousDay>\r\n      ))}\r\n    </PreviousDays>\r\n  </PreviousWrapper>\r\n);\r\n\r\nexport default Previous;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ErrorStyles = styled.div`\r\ntext-align: center;\r\n\r\n& img {\r\n    width: 100px;\r\n    height: 100px;\r\n}\r\n\r\n\r\n`","import React from \"react\";\r\nimport { ErrorStyles } from \"./Error.styles\";\r\nimport MarsImage from \"../img/mars-dan-gerhards-01.svg\";\r\n\r\nconst Error = () => {\r\n  return (\r\n    <ErrorStyles>\r\n      <img src={MarsImage} alt=\"mars\" />\r\n      <div style={{ width: \"300px\" }}>\r\n        Unfortunately due to dust falling on solar batteries and therefore lack\r\n        of energy, InSight has suspended daily temperature measurements. Get the\r\n        latest Mars weather from the{\" \"}\r\n        <a\r\n          href=\"https://mars.nasa.gov/msl/weather/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Curiosity Rover\r\n        </a>\r\n        . Please have a look at{\" \"}\r\n        <a\r\n          href=\"https://github.com/misza777/Mars_Weather_App_React\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          app github repository\r\n        </a>\r\n        .\r\n      </div>\r\n    </ErrorStyles>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  :root {\r\n    --fw-light: 300;\r\n    --fw-normal: 400;\r\n    --fw-semi: 500;\r\n    --fw-bold: 700;\r\n    --fs-h1: 1.5rem;\r\n    --fs-h2: 2.25rem;\r\n    --fs-body: 1rem;\r\n    --fs-xl: 4.5rem;\r\n    --clr-light: #fff;\r\n    --clr-gray: #989898;\r\n    --clr-dark: #444;\r\n    --clr-accent: #D06D6D;\r\n    --clr-accent-dark: #613131;\r\n  }\r\n\r\n  .sr-only:not(:focus):not(:active) {\r\n    clip: rect(0 0 0 0);\r\n    clip-path: inset(50%);\r\n    height: 1px;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    white-space: nowrap;\r\n    width: 1px;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    font-family: 'Montserrat', sans-serif;\r\n    line-height: 1.6;\r\n    background-image: url(${(props) => props.bgImage});\r\n    background-size: cover;\r\n    height: 100vh;\r\n\r\n    color: var(--clr-light);\r\n  }\r\n\r\n  h1, h2, h3 {\r\n    line-height: 1;\r\n  }\r\n\r\n  a {\r\n    color: var(--clr-accent);\r\n  }\r\n\r\n  a:hover {\r\n    color: var(--clr-accent-dark);\r\n  }  \r\n\r\n  .main-title {\r\n    font-size: var(--fs-h1);\r\n    font-weight: var(--fw-light);\r\n    text-transform: uppercase;\r\n    color: var(--clr-accent);\r\n    letter-spacing: 2px;\r\n    grid-column: 1 / -1;\r\n  }\r\n`;\r\n\r\nexport const AppWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const MarsWeather = styled.main`\r\n  background: rgba(0, 0, 0, 0.7);\r\n  padding: 2em;\r\n  max-width: 1000px;\r\n  margin: 40px 0;\r\n  border-radius: 20px;\r\n\r\n  .section-title {\r\n    font-size: var(--fs-h2);\r\n    font-weight: var(--fw-bold);\r\n    margin: 0;\r\n  }\r\n\r\n  .reading {\r\n    font-size: var(--fs-h1);\r\n    margin: 0;\r\n    color: var(--clr-gray);\r\n  }\r\n`;\r\n\r\nexport const InfoWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\n//helpers\r\nimport { formatDate } from \"./helpers\";\r\n//API\r\nimport { API_URL } from \"./api\";\r\n//components\r\nimport WeatherData from \"./components/WeatherData\";\r\nimport Info from \"./components/Info\";\r\nimport Unit from \"./components/Unit\";\r\nimport Previous from \"./components/Previous\";\r\nimport Error from \"./components/Error\";\r\n//Img\r\nimport BGImage from \"./img/nasa-mars-bg.jpg\";\r\n//Styles\r\nimport {\r\n  AppWrapper,\r\n  GlobalStyle,\r\n  MarsWeather,\r\n  InfoWrapper,\r\n} from \"./App.styles\";\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [weather, setWeather] = useState([]);\r\n  const [selectedSol, setSelectedSol] = useState();\r\n  const [metric, setMetric] = useState(true);\r\n  const [previous, setPrevious] = useState(false);\r\n  const [error, setError] = useState(true);\r\n  // console.log(weather);\r\n\r\n  useEffect(() => {\r\n    const fetchFromApi = async () => {\r\n      const weather = await (await fetch(API_URL)).json();\r\n      console.log(weather);\r\n\r\n      weather && weather.sol_keys.length !== 0 ? setError(false) : setError(true);\r\n\r\n      const marsWeather = weather.sol_keys.map((solKey) => {\r\n        return {\r\n          // key: solKey,\r\n          sol: solKey,\r\n          //nowy zapis ES2020 jesli nie ma danych to wyrzuc\r\n          maxTemp: weather[solKey].AT?.mx || \"No data!\",\r\n          minTemp: weather[solKey].AT?.mn || \"No data!\",\r\n          windSpeed: Math.round(weather[solKey].HWS?.av || 0),\r\n          season: weather[solKey].Season || \"No data!\",\r\n          windDirectionDegrees:\r\n            weather[solKey].WD?.most_common?.compass_degrees || 0,\r\n          windDirectionPoint:\r\n            weather[solKey].WD?.most_common?.compass_point || \"No data!\",\r\n          date: formatDate(new Date(weather[solKey].First_UTC)),\r\n        };\r\n      });\r\n      setWeather(marsWeather);\r\n      setSelectedSol(marsWeather.length - 1);\r\n      setLoading(false);\r\n      console.log(weather);\r\n    };\r\n\r\n    fetchFromApi();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle bgImage={BGImage} />\r\n      <AppWrapper>\r\n        <MarsWeather>\r\n          {loading ? (\r\n            <div>Loading ... </div>\r\n          ) : error ? (\r\n            <Error/>\r\n          ) : (\r\n            <>\r\n              <h1 className=\"main-title\">\r\n                Latest Weather at Elysium Plantitia delivered by Insight Mars\r\n              </h1>\r\n              <WeatherData sol={weather[selectedSol]} isMetric={metric} />\r\n              <InfoWrapper>\r\n                <Info />\r\n                <Unit metric={metric} setMetric={setMetric} />\r\n              </InfoWrapper>\r\n            </>\r\n          )}\r\n        </MarsWeather>\r\n        <Previous\r\n          weather={weather}\r\n          previous={previous}\r\n          setPrevious={setPrevious}\r\n          setSelectedSol={setSelectedSol}\r\n          isMetric={metric}\r\n        />\r\n      </AppWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}